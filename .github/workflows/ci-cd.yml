name: BobApp CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Backend Tests & Coverage
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run Backend Tests
      run: |
        cd back
        mvn clean test
    
    - name: Generate Jacoco Report
      run: |
        cd back
        mvn jacoco:report
    
    - name: Upload Backend Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./back/target/site/jacoco/jacoco.xml
        flags: backend

  test-frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests & Coverage
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd front
        npm ci
    
    - name: Run Frontend Tests
      run: |
        cd front
        npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
    
    - name: List Coverage Files (Debug)
      run: |
        echo "=== Frontend Coverage Files ==="
        find front/coverage -type f -name "*.info" || echo "No .info files found"
        ls -la front/coverage/ || echo "Coverage directory not found"
    
    - name: Upload Frontend Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./front/coverage
        flags: frontend

  sonarcloud:
    runs-on: ubuntu-latest
    name: SonarCloud Analysis
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install Frontend Dependencies
      run: |
        cd front
        npm ci
    
    - name: Run Frontend Tests for SonarCloud
      run: |
        cd front
        npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
    
    - name: Run Backend Tests for SonarCloud
      run: |
        cd back
        mvn clean test jacoco:report
    
    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd back
        mvn sonar:sonar \
          -Dsonar.projectKey=bobapp \
          -Dsonar.organization=your-org \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=src/main \
          -Dsonar.tests=src/test \
          -Dsonar.java.coveragePlugin=jacoco \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.javascript.lcov.reportPaths=../front/coverage/lcov.info

  build-and-push:
    runs-on: ubuntu-latest
    name: Build & Push Docker Images
    needs: [test-backend, test-frontend, sonarcloud]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./back
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest,${{ secrets.DOCKER_USERNAME }}/bobapp-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./front
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest,${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max